language: r
sudo: false
cache: packages
warnings_are_errors: true
use_bioc: true
bioc_required: true
cran: http://cran.rstudio.com
dist: trusty
addons:
  apt:
    packages:
    - libfftw3-dev
    - libgsl0-dev
    - libgsl0ldbl
os:
- linux
- osx
osx_image: xcode9
r:
- 3.2
- 3.3
- 3.4
- release
- devel
matrix:
  allow_failures:
  - r: devel
env:
  global:
  - RGL_USE_NULL=TRUE
  - PROJECT_NAME=neuroconductor
  - DISPLAY=:99.0
r_check_args: "--as-cran --install-args=--build"
before_install:
- ulimit -n 2048
- export PROJ_DIR=`basename $PWD`
- fname=travis_helpers.sh
- wget -O ${fname} http://bit.ly/travis_helpers
- cat ${fname}; source ${fname}; rm ${fname}
- cat DESCRIPTION
- start_xvfb ;
- export rver=`r_version`; echo $rver ;
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then no_open_mp ; fi
- jags_install
- remove_neuroc_packages
- cat DESCRIPTION
- install_remotes_no_dep
- cat DESCRIPTION
- export PACKAGE_NAME=`package_name`
- echo "Package Name is $PACKAGE_NAME"
- if [[ "${PACKAGE_NAME}" == "waveslim" ]]; then fftw_install ; fi
- if [[ "${PACKAGE_NAME}" == "dti" ]]; then gsl_install ; fi
- if [[ "${PACKAGE_NAME}" == "ROpenCVLite" || "${PACKAGE_NAME}" == "Rvision" ]]; then
  shopt -s expand_aliases ; x=`Rscript -e "cat(Sys.which('R'))"` ; echo "reset R"
  ; alias R="travis_wait 100 ${x}" ; fi
- install_python_requirements ;
- R CMD javareconf ;
after_success:
- cat ${PACKAGE_NAME}.Rcheck/00install.out
- cat ${PACKAGE_NAME}.Rcheck/00check.log
after_failure:
- cat ${PACKAGE_NAME}.Rcheck/00install.out
- cat ${PACKAGE_NAME}.Rcheck/00check.log
before_deploy:
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then PKG_TARBALL=$(ls -1t *.tgz | head -n 1);
  PKG_TARBALL_WITH_R=`echo $PKG_TARBALL | sed 's/.tgz/_'"R${rver}"'.tgz/'` ; mv ${PKG_TARBALL}
  ${PKG_TARBALL_WITH_R} ; echo "Built tarball is ${PKG_TARBALL_WITH_R}" ; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then PKG_TARBALL=$(ls -1t *.tar.gz | head -n
  1); PKG_TARBALL_WITH_R=`echo $PKG_TARBALL | sed 's/.tar.gz/_'"R${rver}"'.tar.gz/'`
  ; mv ${PKG_TARBALL} ${PKG_TARBALL_WITH_R} ; echo "Built tarball is ${PKG_TARBALL_WITH_R}"
  ; fi
- if [[ "${TRAVIS_OS_NAME}" = "osx" ]]; then rm -f *.tar.gz; fi
deploy:
  provider: releases
  skip_cleanup: true
  file_glob: true
  file: "${PACKAGE_NAME}*.t*gz"
  on:
    tags: true
  api-key:
    secure: DQLQpjjBronIIgdAneHkbhjo5vEpBvkrWhosNhQnFua7q7iZ9wxHuEw8CflG+/DvH4ZhkYZg2vegKeT/4mEn25paKZyvX1MH5rt7RwpfjsPP10GtQxu8SXyrAyNJZ1i6fUeeZd0VjaHflPgKlLYXoiTqhShm3iFWvE6kN59d7entS8TkCN255omuCaL62c8pv0NuweN0LgXqMjYuYRStd9Ib5y5iQdhJXQunG6u1RuWdQsUQDT5SWxUQIeOn7NkmfezZvY0J2moR5rhi3v+GzOJot/1Twt2TZzPJJobXGl9898gMpwmxVnnRJET09IgJLuGOO17dghDdxEdmzxm6ImcLUrLkHjZdIrK/ZswnCwo82tjakhM/ySfEZ1XFkJwh5Xb9i+X6oksXUd6Yrvc9Hb7+LYRaqgqdHjPEMNbivHAfRKJVfVd77BMi+QIJvUfCg8K1Qv0fZPaZTxCOarIu0VSJpuEH0pZT6EnjhGEmMaXRrb/gipq2WDPpfIuEYgwFJmIPHYwjPfbDZLml3aTppnzAR+sjd80yt45T5LtVap0zx2yu+yFWEftNTdzdon+vR0vqzAhquXACUdqv3T2VVF4DkQRbNyFd5qaEzECn1AcyhKNPyVlYLIRPjKntM74cpQviTsx2x1cZRBPQTrFf/IFT/w4HRGCzCyzVlz1+MLw=
after_deploy:
- if [[ "${TRAVIS_OS_NAME}" == "linux" && ${TRAVIS_R_VERSION_STRING} = "release" ]];
  then echo 'covr::coveralls(type = "all", quiet = FALSE)' > neuroc_covr.R ; travis_wait
  100 Rscript neuroc_covr.R ; rm neuroc_covr.R ; fi
